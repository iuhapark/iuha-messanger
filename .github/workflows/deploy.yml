# 파이프 라인 이름
name: IUHA

# Event Trigger 설정
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Action 탭에서 Workflow실행 가능 설정
  workflow_dispatch:

# WorkFlow의 job 목록
jobs:
  build:
    # workflow가 실행될 환경
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/checkout@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          java-package: 'jdk'

      - name: make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION_YML }}" > ./application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle # Gradle 설정
        run: ./gradlew clean build --exclude-task test
#
#      # Docker 이미지 빌드
#      - name: Docker build & Push
#        run: |
#          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
#          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/back .
#          docker push ${{ secrets.DOCKERHUB_USERNAME }}/back
#
#      # AWS 자격증명 부분 추가
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-northeast-2
#
#      - name: Deploy to server
#        uses: appleboy/ssh-action@master
#        id: deploy
#        env:
#          APP: "back"
#          COMPOSE: "/home/iuha/docker-compose.yml"
#        with:
#          host: ${{ secrets.EC2_HOST }} # EC2_HOST 키
#          username: ubuntu
#          key: ${{ secrets.EC2_PRIVATE_KEY }} # PRIVATE_KEY
#          port: 22
#          envs: COMPOSE
#          script: |
#            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
#            sudo docker rm -f $(docker ps -qa)
#            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/back
#            sudo docker-compose -f $COMPOSE up -d